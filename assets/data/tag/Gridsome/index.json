{"hash":"baa9902bb972097ab57b4657e0e6020e18412fa0","data":{"tag":{"title":"Gridsome","belongsTo":{"edges":[{"node":{"title":"Build Blog Site using Gridsome and Vue","path":"/build-blog-site-using-gridsome-and-vue/","date":"27. January 2021","timeToRead":3,"description":"In this post we will use Gridsome as static site generator tool. which is fast and easy to create blogs. Gridsome is based on Vue Js and it is highly inspired from to Gatsby.","content":"<h3 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Introduction</h3>\n<p>First of all lets understand about Gridsome.<code class=\"language-text\">what is Gridsome?</code> Grisome is <a href=\"https://gridsome.org/docs/jamstack/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Jamstack</a> framework\nto build static website and it is build on VueJs.</p>\n<h3 id=\"how-it-works\"><a href=\"#how-it-works\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>How it works?</h3>\n<p>Source plugin which fetch the content from local file or get data from other API's and dump those data in local databse.\nGridsome uses <a href=\"https://graphql.org/learn/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">GraphQL</a> to fetch data which is required by VueJs componant or pages.</p>\n<h3 id=\"getting-started\"><a href=\"#getting-started\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Getting started</h3>\n<p>we need to install <code class=\"language-text\">gridsome-cli</code> locally or you can use <code class=\"language-text\">npx</code> to create simple blog project</p>\n<p>if you are using npm then  <code class=\"language-text\">npm install -g @gridsome/cli</code> command or if you are using yarn then use\n<code class=\"language-text\">yarn global add @gridsome/cli</code> command to get installed <code class=\"language-text\">gridsome-cli</code></p>\n<p>or simply use npx to create simple project</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">$ npx gridsome create <span class=\"token string\">'simple-blog-project'</span>\n$ cd simple<span class=\"token operator\">-</span>blog<span class=\"token operator\">-</span>project\n$ npm install\n$ npm run develop</code></pre>\n<h3 id=\"directory-structure-and-files\"><a href=\"#directory-structure-and-files\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Directory Structure and files</h3>\n<ul>\n<li><code class=\"language-text\">package.json</code> this file content the packages or plugins which have been used in project.</li>\n<li><code class=\"language-text\">gridsome.server.js</code> this file is used for hooks in gridsome server and it is completely optional.</li>\n<li><code class=\"language-text\">static</code>  Files which will be put inside this folder will be copied to <code class=\"language-text\">dist</code> directory after project build.</li>\n<li><code class=\"language-text\">src/assets</code> This directory is used for images, css, fonts and icons files.</li>\n<li><code class=\"language-text\">src/components</code> Used to VueJs compponent which are required in application.</li>\n<li><code class=\"language-text\">src/layouts</code> Used for Layouts required in application.</li>\n<li><code class=\"language-text\">src/pages</code> Used to create pages for application. It generates automatic <code class=\"language-text\">routes</code> based on file path.</li>\n<li><code class=\"language-text\">src/templates</code> Templates are used to create single pages for nodes in a collection.</li>\n</ul>\n<h3 id=\"create-your-new-blog\"><a href=\"#create-your-new-blog\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Create your new blog</h3>\n<p>As we have gone through some basic command and directory structure of project.\nNow it's time to create actual blog. we will use <code class=\"language-text\">markdown</code> as datasource to create the blog pages.</p>\n<p>We will also use <a href=\"https://gridsome.org/plugins/@gridsome/source-filesystem\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">source-filesystem</code></a> and\n<a href=\"https://www.npmjs.com/package/@gridsome/transformer-remark\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">transformer-remark</code></a> npm packages</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">$ npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev @gridsome<span class=\"token operator\">/</span>source<span class=\"token operator\">-</span>filesystem\n$ npm install <span class=\"token operator\">--</span>save<span class=\"token operator\">-</span>dev @gridsome<span class=\"token operator\">/</span>transformer<span class=\"token operator\">-</span>remark</code></pre>\n<p>let's understands the uses of these two installed packages\n<code class=\"language-text\">source-filesystem</code> This package tranforms your content which will be used by componants using <code class=\"language-text\">GraphQL</code>\n<code class=\"language-text\">transformer-remark</code> This package is used to understand the <code class=\"language-text\">markdown</code> content by application.</p>\n<p>now let's include these package in <code class=\"language-text\">gridsome.config.js</code></p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\">module<span class=\"token punctuation\">.</span><span class=\"token property-access\">exports</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  siteName<span class=\"token operator\">:</span> <span class=\"token string\">'Gridsome'</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// Create posts from markdown files</span>\n      use<span class=\"token operator\">:</span> <span class=\"token string\">'@gridsome/source-filesystem'</span><span class=\"token punctuation\">,</span>\n      options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        typeName<span class=\"token operator\">:</span> <span class=\"token string\">'Post'</span><span class=\"token punctuation\">,</span>\n        path<span class=\"token operator\">:</span> <span class=\"token string\">'content/posts/*.md'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  transformers<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//Add markdown support to all file-system sources</span>\n    remark<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      externalLinksTarget<span class=\"token operator\">:</span> <span class=\"token string\">'_blank'</span><span class=\"token punctuation\">,</span>\n      externalLinksRel<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'nofollow'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'noopener'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'noreferrer'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      anchorClassName<span class=\"token operator\">:</span> <span class=\"token string\">'icon icon-link'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>options we used for <code class=\"language-text\">souce-filesystem</code> in above snippets\n<code class=\"language-text\">typeName</code> this will be the node name in <code class=\"language-text\">GraphQL</code>.\n<code class=\"language-text\">path</code> it will look in mentioned path and grab the <code class=\"language-text\">markdown</code> files. it will also create the <code class=\"language-text\">route</code> same as file name which will be used to access the blog content in browser.</p>\n<p>let's create <code class=\"language-text\">my-first-blog.md</code> in <code class=\"language-text\">content/blogs</code> directory.</p>\n<pre class=\"language-text\"><code class=\"language-text\">---\ntitle: My first blog\ndate: 2019-01-07\n---\n\nLorem Ipsum is simply dummy text of the printing and typesetting industry.\nLorem Ipsum has been the industry&#39;s standard dummy text ever since the 1500s,\nwhen an unknown printer took a galley of type and scrambled it to make a type specimen book.</code></pre>\n<p>now to verify where every thing is working or not restart the server so that it load the blog data which we have created in above step.\nand visit <code class=\"language-text\">http://localhost:8080/___explore</code> and try to execute the below query.</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1896 604' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-57af8c9dd955a0011f2d30f6d624235d'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-57af8c9dd955a0011f2d30f6d624235d)' width='1896' height='604' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAUCAYAAAA9djs/AAAACXBIWXMAABYlAAAWJQFJUiTwAAAEaklEQVRYw71YXYvjZBTujbjitE3baZq0053ZTr%2bn%2bWiaTD8nbUeXdd1dvJBFEATB3yHshaAIeiMoOCDozf4BL1ZQLxREEET8Q4/nvGkyaSYzdNamF4fz5qvJec5znnPepqTjPqQame/DdhxjtRgffSbyfK5u4U65g8xhD5kjA4X2CPLJFMXuBKWTqE0Dk7vrx0lYKnOo0UfpCDxZ9p4hfPrIP6eJ6%2bnVPemYZwILn1utX1UauP/Oe7j44TmeffYljowpytoZquaCQJiumdz1AveDTxqEFAfrmY79eh%2bllo1ic4Biw0K%2bZkBpO8hTFguURbU7hEzHOTouNm3hxbmWg1Lbs0JjgH16vtQ%2bFefvVDpoDVz89Ovv%2bOqbC/z44mc8%2b/QLYoiJA3OJSm%2bMqj5GRZuQn0Dt8YfNdsaCFGdon4NtOJA6LqTWBJnaADltjLwxQ16fQiJgcvTBV7J9jfkMkQjYV5QmTs8f4Y%2b//sEHH36Er7/9DhffP6ffI3A1F1VtBGdkwxn2YdiWAODAmK8FLycIhACAM15oDQmAuQAg2zyFxJlnAMwzSHSdazkdCnAT88qInql28fEnn%2bPPv//Fi19%2bw/LxUxTbQ5T1MxQ7RPfeHKrzGIr9NpTBQ6jmuQBC1WZrgScBggBAJtrnKFtSnzI/oHXXQvbQEMHn%2by4K9hJ5MqY8Wzqu9m9gwuvVE6SrHVjuAzTtObLHFqr9BZTeZVCq9QBl5xEU8w3BDNVYEABu4qUQAJCve4Fl2xZyFjFAt5FtmAKYcEbXRHCD4MP%2btYOe6ABKbyZozl5edQK5M4I6eAuV6VMczN%2bHaj8khsxRMdz1ctgyEEIEuQQkqsn0XQKgSUE7Q%2bRsAqFlCQH0u0E6rhNsAIK/LjTsIOiqGQbAzzKJob4KmACRO2OU%2bHqkK2wTBAEAC9ze3V5Qs5JGZWCzJhAAR2ao7W3OgDgweB7wg%2bA2GM0oix3XfYmprxFA%2bkJ47goM1raCDr9TAODT3weALUvBcxnkTAeZuvFSQd8EgHxNVjnrivkmysMnVA7vetpAWlEhwRT3dVbWDq1vOu6u1u2x5yOl5AEQETaeCTJ1k/SgjywJYqa2fQDisnEJwkhkvnz6BIp1X3gGQiXWKENiBs0V6mRJ64VYs1endGy5ntn%2bdWKPPhPXVJc6y2xJvzuLMkAXJRCu7wLNBawHgd2i7m/DgOvo6dNdMc5FGTAjuCwUvocCKlF3UhwKrk9lRK1aeGu1Xh0zMHxfidgjQBp7YEXfm%2bJhhac81gCeznwwbhK0bQMQXQeDEJUDC6PnL8vmCsU7oXU3UgrB/WPho%2b8XJVAgDdijTHPw2Xv/n%2b63ASCqA5XIFLhtu8IAXwP26APz9IHRdpckAFEQmPo%2b/XexExQA8D6ATbTDYzOR7G8CgCKU3hWj8U63w5e7QWON/rtggL/m3s9zQdJzfywAsRuYHWhAWPFVQf3pzv4DuLIX2Kba3xaAMtE%2bPBLvMvhYAJKyOACS3uhsYv8BA0RDU2T1o1wAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1896\" alt=\"Image\" data-srcset=\"/assets/static/graphql-query.82a2fbd.2551ff697f444aad84f3ebc47188bb42.png 480w, /assets/static/graphql-query.cbab2cf.2551ff697f444aad84f3ebc47188bb42.png 1024w, /assets/static/graphql-query.50f3e7a.2551ff697f444aad84f3ebc47188bb42.png 1896w\" data-sizes=\"(max-width: 1896px) 100vw, 1896px\" data-src=\"/assets/static/graphql-query.50f3e7a.2551ff697f444aad84f3ebc47188bb42.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/graphql-query.50f3e7a.2551ff697f444aad84f3ebc47188bb42.png\" width=\"1896\" alt=\"Image\"></noscript></p>\n<p>If everything is correct then it should return the <code class=\"language-text\">title</code> of post in graphql response.</p>\n<h3 id=\"create-template-for-post\"><a href=\"#create-template-for-post\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Create template for post</h3>\n<p>Now we will create template in <code class=\"language-text\">src/templates</code> directory with same as\nwe have declared <code class=\"language-text\">typeName</code> in <code class=\"language-text\">source-filesystem</code> config.</p>\n<p>let's create <code class=\"language-text\">Post.vue</code> file in template directory.</p>\n<pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token operator\">&lt;</span>template<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>layout<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span>text<span class=\"token operator\">=</span><span class=\"token string\">\"$page.post.title\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div v<span class=\"token operator\">-</span>html<span class=\"token operator\">=</span><span class=\"token string\">\"$page.post.content\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>layout<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>template<span class=\"token operator\">></span>\n\n<span class=\"token operator\">&lt;</span>page<span class=\"token operator\">-</span>query<span class=\"token operator\">></span>\n  query <span class=\"token function\"><span class=\"token maybe-class-name\">Post</span></span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">$path<span class=\"token operator\">:</span> <span class=\"token known-class-name class-name\">String</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      post<span class=\"token operator\">:</span> <span class=\"token function\">post</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">path<span class=\"token operator\">:</span> $path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          title\n          content\n      <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>page<span class=\"token operator\">-</span>query<span class=\"token operator\">></span></code></pre>\n<p>now what is <code class=\"language-text\">page-query</code>?, well it used to executing the <code class=\"language-text\">graphql</code> queries.</p>\n<p>query result can be access in <code class=\"language-text\">$page</code> instance. for eg: <code class=\"language-text\">$page.post.title</code>\nto access your blog just hit <code class=\"language-text\">http://localhost:8080/my-first-blog</code> in browser.</p>\n<h5 id=\"congratulations-you-have-created-your-first-demo-blog\"><a href=\"#congratulations-you-have-created-your-first-demo-blog\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Congratulations!!! you have created your first demo blog.</h5>\n<p>gridsome have made it too simple to create blog site isn't it?</p>\n<p>checkout some <a href=\"https://gridsome.org/starters/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">gridsome starter</a> themes, just\nclone those repository and start writing the blog</p>\n"}}]}}},"context":{}}